package com.shbestwin.followupmanager.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.shbestwin.followupmanager.model.followup.FollowUpTwoToFivePregnancy;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table FOLLOW_UP_TWO_TO_FIVE_PREGNANCY.
*/
public class FollowUpTwoToFivePregnancyDao extends AbstractDao<FollowUpTwoToFivePregnancy, String> {

    public static final String TABLENAME = "FOLLOW_UP_TWO_TO_FIVE_PREGNANCY";

    /**
     * Properties of entity FollowUpTwoToFivePregnancy.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property FollowUpNo = new Property(0, String.class, "followUpNo", true, "FOLLOW_UP_NO");
        public final static Property Idcard = new Property(1, String.class, "idcard", false, "IDCARD");
        public final static Property Grxx_fsrq = new Property(2, String.class, "grxx_fsrq", false, "GRXX_FSRQ");
        public final static Property Grxx_yz = new Property(3, String.class, "grxx_yz", false, "GRXX_YZ");
        public final static Property Grxx_cqfscs = new Property(4, String.class, "grxx_cqfscs", false, "GRXX_CQFSCS");
        public final static Property Grxx_zs = new Property(5, String.class, "grxx_zs", false, "GRXX_ZS");
        public final static Property Tz_tz = new Property(6, String.class, "tz_tz", false, "TZ_TZ");
        public final static Property Tz_xy = new Property(7, String.class, "tz_xy", false, "TZ_XY");
        public final static Property Tz_xhdb = new Property(8, String.class, "tz_xhdb", false, "TZ_XHDB");
        public final static Property Tz_ndb = new Property(9, String.class, "tz_ndb", false, "TZ_NDB");
        public final static Property Cqjc_gdgd = new Property(10, String.class, "cqjc_gdgd", false, "CQJC_GDGD");
        public final static Property Cqjc_fw = new Property(11, String.class, "cqjc_fw", false, "CQJC_FW");
        public final static Property Cqjc_txl = new Property(12, String.class, "cqjc_txl", false, "CQJC_TXL");
        public final static Property Qtjc_sfbc = new Property(13, Boolean.class, "qtjc_sfbc", false, "QTJC_SFBC");
        public final static Property Qtjc_sfbcms = new Property(14, String.class, "qtjc_sfbcms", false, "QTJC_SFBCMS");
        public final static Property Qtjc_sfxtsc = new Property(15, Boolean.class, "qtjc_sfxtsc", false, "QTJC_SFXTSC");
        public final static Property Qtjc_sfxtscms = new Property(16, String.class, "qtjc_sfxtscms", false, "QTJC_SFXTSCMS");
        public final static Property Zd_name = new Property(17, String.class, "zd_name", false, "ZD_NAME");
        public final static Property Zz_sfygzz = new Property(18, Boolean.class, "zz_sfygzz", false, "ZZ_SFYGZZ");
        public final static Property Zz_yy = new Property(19, String.class, "zz_yy", false, "ZZ_YY");
        public final static Property Zz_jgjks = new Property(20, String.class, "zz_jgjks", false, "ZZ_JGJKS");
        public final static Property Zz_xcsfrq = new Property(21, String.class, "zz_xcsfrq", false, "ZZ_XCSFRQ");
        public final static Property Ztpg_sfysqm = new Property(22, String.class, "ztpg_sfysqm", false, "ZTPG_SFYSQM");
        public final static Property CreateTime = new Property(23, String.class, "createTime", false, "CREATE_TIME");
        public final static Property UpdateTime = new Property(24, String.class, "updateTime", false, "UPDATE_TIME");
    };


    public FollowUpTwoToFivePregnancyDao(DaoConfig config) {
        super(config);
    }
    
    public FollowUpTwoToFivePregnancyDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'FOLLOW_UP_TWO_TO_FIVE_PREGNANCY' (" + //
                "'FOLLOW_UP_NO' TEXT PRIMARY KEY NOT NULL ," + // 0: followUpNo
                "'IDCARD' TEXT NOT NULL ," + // 1: idcard
                "'GRXX_FSRQ' TEXT," + // 2: grxx_fsrq
                "'GRXX_YZ' TEXT," + // 3: grxx_yz
                "'GRXX_CQFSCS' TEXT," + // 4: grxx_cqfscs
                "'GRXX_ZS' TEXT," + // 5: grxx_zs
                "'TZ_TZ' TEXT," + // 6: tz_tz
                "'TZ_XY' TEXT," + // 7: tz_xy
                "'TZ_XHDB' TEXT," + // 8: tz_xhdb
                "'TZ_NDB' TEXT," + // 9: tz_ndb
                "'CQJC_GDGD' TEXT," + // 10: cqjc_gdgd
                "'CQJC_FW' TEXT," + // 11: cqjc_fw
                "'CQJC_TXL' TEXT," + // 12: cqjc_txl
                "'QTJC_SFBC' INTEGER," + // 13: qtjc_sfbc
                "'QTJC_SFBCMS' TEXT," + // 14: qtjc_sfbcms
                "'QTJC_SFXTSC' INTEGER," + // 15: qtjc_sfxtsc
                "'QTJC_SFXTSCMS' TEXT," + // 16: qtjc_sfxtscms
                "'ZD_NAME' TEXT," + // 17: zd_name
                "'ZZ_SFYGZZ' INTEGER," + // 18: zz_sfygzz
                "'ZZ_YY' TEXT," + // 19: zz_yy
                "'ZZ_JGJKS' TEXT," + // 20: zz_jgjks
                "'ZZ_XCSFRQ' TEXT," + // 21: zz_xcsfrq
                "'ZTPG_SFYSQM' TEXT," + // 22: ztpg_sfysqm
                "'CREATE_TIME' TEXT," + // 23: createTime
                "'UPDATE_TIME' TEXT);"); // 24: updateTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'FOLLOW_UP_TWO_TO_FIVE_PREGNANCY'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, FollowUpTwoToFivePregnancy entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getFollowUpNo());
        stmt.bindString(2, entity.getIdcard());
 
        String grxx_fsrq = entity.getGrxx_fsrq();
        if (grxx_fsrq != null) {
            stmt.bindString(3, grxx_fsrq);
        }
 
        String grxx_yz = entity.getGrxx_yz();
        if (grxx_yz != null) {
            stmt.bindString(4, grxx_yz);
        }
 
        String grxx_cqfscs = entity.getGrxx_cqfscs();
        if (grxx_cqfscs != null) {
            stmt.bindString(5, grxx_cqfscs);
        }
 
        String grxx_zs = entity.getGrxx_zs();
        if (grxx_zs != null) {
            stmt.bindString(6, grxx_zs);
        }
 
        String tz_tz = entity.getTz_tz();
        if (tz_tz != null) {
            stmt.bindString(7, tz_tz);
        }
 
        String tz_xy = entity.getTz_xy();
        if (tz_xy != null) {
            stmt.bindString(8, tz_xy);
        }
 
        String tz_xhdb = entity.getTz_xhdb();
        if (tz_xhdb != null) {
            stmt.bindString(9, tz_xhdb);
        }
 
        String tz_ndb = entity.getTz_ndb();
        if (tz_ndb != null) {
            stmt.bindString(10, tz_ndb);
        }
 
        String cqjc_gdgd = entity.getCqjc_gdgd();
        if (cqjc_gdgd != null) {
            stmt.bindString(11, cqjc_gdgd);
        }
 
        String cqjc_fw = entity.getCqjc_fw();
        if (cqjc_fw != null) {
            stmt.bindString(12, cqjc_fw);
        }
 
        String cqjc_txl = entity.getCqjc_txl();
        if (cqjc_txl != null) {
            stmt.bindString(13, cqjc_txl);
        }
 
        Boolean qtjc_sfbc = entity.getQtjc_sfbc();
        if (qtjc_sfbc != null) {
            stmt.bindLong(14, qtjc_sfbc ? 1l: 0l);
        }
 
        String qtjc_sfbcms = entity.getQtjc_sfbcms();
        if (qtjc_sfbcms != null) {
            stmt.bindString(15, qtjc_sfbcms);
        }
 
        Boolean qtjc_sfxtsc = entity.getQtjc_sfxtsc();
        if (qtjc_sfxtsc != null) {
            stmt.bindLong(16, qtjc_sfxtsc ? 1l: 0l);
        }
 
        String qtjc_sfxtscms = entity.getQtjc_sfxtscms();
        if (qtjc_sfxtscms != null) {
            stmt.bindString(17, qtjc_sfxtscms);
        }
 
        String zd_name = entity.getZd_name();
        if (zd_name != null) {
            stmt.bindString(18, zd_name);
        }
 
        Boolean zz_sfygzz = entity.getZz_sfygzz();
        if (zz_sfygzz != null) {
            stmt.bindLong(19, zz_sfygzz ? 1l: 0l);
        }
 
        String zz_yy = entity.getZz_yy();
        if (zz_yy != null) {
            stmt.bindString(20, zz_yy);
        }
 
        String zz_jgjks = entity.getZz_jgjks();
        if (zz_jgjks != null) {
            stmt.bindString(21, zz_jgjks);
        }
 
        String zz_xcsfrq = entity.getZz_xcsfrq();
        if (zz_xcsfrq != null) {
            stmt.bindString(22, zz_xcsfrq);
        }
 
        String ztpg_sfysqm = entity.getZtpg_sfysqm();
        if (ztpg_sfysqm != null) {
            stmt.bindString(23, ztpg_sfysqm);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(24, createTime);
        }
 
        String updateTime = entity.getUpdateTime();
        if (updateTime != null) {
            stmt.bindString(25, updateTime);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public FollowUpTwoToFivePregnancy readEntity(Cursor cursor, int offset) {
        FollowUpTwoToFivePregnancy entity = new FollowUpTwoToFivePregnancy( //
            cursor.getString(offset + 0), // followUpNo
            cursor.getString(offset + 1), // idcard
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // grxx_fsrq
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // grxx_yz
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // grxx_cqfscs
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // grxx_zs
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // tz_tz
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // tz_xy
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // tz_xhdb
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // tz_ndb
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // cqjc_gdgd
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // cqjc_fw
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // cqjc_txl
            cursor.isNull(offset + 13) ? null : cursor.getShort(offset + 13) != 0, // qtjc_sfbc
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // qtjc_sfbcms
            cursor.isNull(offset + 15) ? null : cursor.getShort(offset + 15) != 0, // qtjc_sfxtsc
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // qtjc_sfxtscms
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // zd_name
            cursor.isNull(offset + 18) ? null : cursor.getShort(offset + 18) != 0, // zz_sfygzz
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // zz_yy
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // zz_jgjks
            cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21), // zz_xcsfrq
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // ztpg_sfysqm
            cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23), // createTime
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24) // updateTime
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, FollowUpTwoToFivePregnancy entity, int offset) {
        entity.setFollowUpNo(cursor.getString(offset + 0));
        entity.setIdcard(cursor.getString(offset + 1));
        entity.setGrxx_fsrq(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGrxx_yz(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGrxx_cqfscs(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGrxx_zs(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setTz_tz(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setTz_xy(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setTz_xhdb(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setTz_ndb(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setCqjc_gdgd(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setCqjc_fw(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setCqjc_txl(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setQtjc_sfbc(cursor.isNull(offset + 13) ? null : cursor.getShort(offset + 13) != 0);
        entity.setQtjc_sfbcms(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setQtjc_sfxtsc(cursor.isNull(offset + 15) ? null : cursor.getShort(offset + 15) != 0);
        entity.setQtjc_sfxtscms(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setZd_name(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setZz_sfygzz(cursor.isNull(offset + 18) ? null : cursor.getShort(offset + 18) != 0);
        entity.setZz_yy(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setZz_jgjks(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setZz_xcsfrq(cursor.isNull(offset + 21) ? null : cursor.getString(offset + 21));
        entity.setZtpg_sfysqm(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setCreateTime(cursor.isNull(offset + 23) ? null : cursor.getString(offset + 23));
        entity.setUpdateTime(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(FollowUpTwoToFivePregnancy entity, long rowId) {
        return entity.getFollowUpNo();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(FollowUpTwoToFivePregnancy entity) {
        if(entity != null) {
            return entity.getFollowUpNo();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
