package com.shbestwin.followupmanager.dao;

import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteStatement;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.Property;
import de.greenrobot.dao.internal.DaoConfig;

import com.shbestwin.followupmanager.model.followup.FollowUpAged;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.
/** 
 * DAO for table FOLLOW_UP_AGED.
*/
public class FollowUpAgedDao extends AbstractDao<FollowUpAged, String> {

    public static final String TABLENAME = "FOLLOW_UP_AGED";

    /**
     * Properties of entity FollowUpAged.<br/>
     * Can be used for QueryBuilder and for referencing column names.
    */
    public static class Properties {
        public final static Property FollowUpNo = new Property(0, String.class, "followUpNo", true, "FOLLOW_UP_NO");
        public final static Property Idcard = new Property(1, String.class, "idcard", false, "IDCARD");
        public final static Property Grxx_zrys = new Property(2, String.class, "grxx_zrys", false, "GRXX_ZRYS");
        public final static Property Grxx_sfrq = new Property(3, String.class, "grxx_sfrq", false, "GRXX_SFRQ");
        public final static Property Grxx_sfzqjy = new Property(4, String.class, "grxx_sfzqjy", false, "GRXX_SFZQJY");
        public final static Property Grxx_sffs = new Property(5, String.class, "grxx_sffs", false, "GRXX_SFFS");
        public final static Property Grxx_sfxz = new Property(6, String.class, "grxx_sfxz", false, "GRXX_SFXZ");
        public final static Property Grxx_xlzt = new Property(7, String.class, "grxx_xlzt", false, "GRXX_XLZT");
        public final static Property Zz = new Property(8, String.class, "zz", false, "ZZ");
        public final static Property Tz_xy = new Property(9, String.class, "tz_xy", false, "TZ_XY");
        public final static Property Tz_xl = new Property(10, String.class, "tz_xl", false, "TZ_XL");
        public final static Property Tz_yw = new Property(11, String.class, "tz_yw", false, "TZ_YW");
        public final static Property Tz_sg = new Property(12, String.class, "tz_sg", false, "TZ_SG");
        public final static Property Tz_tz = new Property(13, String.class, "tz_tz", false, "TZ_TZ");
        public final static Property Tz_tzzs = new Property(14, String.class, "tz_tzzs", false, "TZ_TZZS");
        public final static Property Tz_xzdgc = new Property(15, String.class, "tz_xzdgc", false, "TZ_XZDGC");
        public final static Property Tz_gmddb = new Property(16, String.class, "tz_gmddb", false, "TZ_GMDDB");
        public final static Property Tz_xgysz = new Property(17, String.class, "tz_xgysz", false, "TZ_XGYSZ");
        public final static Property Tz_dmddb = new Property(18, String.class, "tz_dmddb", false, "TZ_DMDDB");
        public final static Property Tz_kfxt = new Property(19, String.class, "tz_kfxt", false, "TZ_KFXT");
        public final static Property Tz_qt = new Property(20, String.class, "tz_qt", false, "TZ_QT");
        public final static Property Shfszd_sfxy = new Property(21, Boolean.class, "shfszd_sfxy", false, "SHFSZD_SFXY");
        public final static Property Shfszd_sfxyms = new Property(22, String.class, "shfszd_sfxyms", false, "SHFSZD_SFXYMS");
        public final static Property Shfszd_sfyj = new Property(23, Boolean.class, "shfszd_sfyj", false, "SHFSZD_SFYJ");
        public final static Property Shfszd_sfyjms = new Property(24, String.class, "shfszd_sfyjms", false, "SHFSZD_SFYJMS");
        public final static Property Shfszd_sfyd = new Property(25, Boolean.class, "shfszd_sfyd", false, "SHFSZD_SFYD");
        public final static Property Shfszd_sfydms = new Property(26, String.class, "shfszd_sfydms", false, "SHFSZD_SFYDMS");
        public final static Property Shfszd_ydxm = new Property(27, String.class, "shfszd_ydxm", false, "SHFSZD_YDXM");
        public final static Property Shfszd_syqk = new Property(28, String.class, "shfszd_syqk", false, "SHFSZD_SYQK");
        public final static Property Shfszd_xltz = new Property(29, String.class, "shfszd_xltz", false, "SHFSZD_XLTZ");
        public final static Property Shfszd_zyxw = new Property(30, String.class, "shfszd_zyxw", false, "SHFSZD_ZYXW");
        public final static Property Shfszd_mqqk = new Property(31, String.class, "shfszd_mqqk", false, "SHFSZD_MQQK");
        public final static Property Shfszd_sffwnr = new Property(32, String.class, "shfszd_sffwnr", false, "SHFSZD_SFFWNR");
        public final static Property Shfszd_sfpg = new Property(33, String.class, "shfszd_sfpg", false, "SHFSZD_SFPG");
        public final static Property Shfszd_xcsfrq = new Property(34, String.class, "shfszd_xcsfrq", false, "SHFSZD_XCSFRQ");
        public final static Property Shfszd_sfysqm = new Property(35, String.class, "shfszd_sfysqm", false, "SHFSZD_SFYSQM");
        public final static Property CreateTime = new Property(36, String.class, "createTime", false, "CREATE_TIME");
        public final static Property UpdateTime = new Property(37, String.class, "updateTime", false, "UPDATE_TIME");
    };


    public FollowUpAgedDao(DaoConfig config) {
        super(config);
    }
    
    public FollowUpAgedDao(DaoConfig config, DaoSession daoSession) {
        super(config, daoSession);
    }

    /** Creates the underlying database table. */
    public static void createTable(SQLiteDatabase db, boolean ifNotExists) {
        String constraint = ifNotExists? "IF NOT EXISTS ": "";
        db.execSQL("CREATE TABLE " + constraint + "'FOLLOW_UP_AGED' (" + //
                "'FOLLOW_UP_NO' TEXT PRIMARY KEY NOT NULL ," + // 0: followUpNo
                "'IDCARD' TEXT NOT NULL ," + // 1: idcard
                "'GRXX_ZRYS' TEXT," + // 2: grxx_zrys
                "'GRXX_SFRQ' TEXT," + // 3: grxx_sfrq
                "'GRXX_SFZQJY' TEXT," + // 4: grxx_sfzqjy
                "'GRXX_SFFS' TEXT," + // 5: grxx_sffs
                "'GRXX_SFXZ' TEXT," + // 6: grxx_sfxz
                "'GRXX_XLZT' TEXT," + // 7: grxx_xlzt
                "'ZZ' TEXT," + // 8: zz
                "'TZ_XY' TEXT," + // 9: tz_xy
                "'TZ_XL' TEXT," + // 10: tz_xl
                "'TZ_YW' TEXT," + // 11: tz_yw
                "'TZ_SG' TEXT," + // 12: tz_sg
                "'TZ_TZ' TEXT," + // 13: tz_tz
                "'TZ_TZZS' TEXT," + // 14: tz_tzzs
                "'TZ_XZDGC' TEXT," + // 15: tz_xzdgc
                "'TZ_GMDDB' TEXT," + // 16: tz_gmddb
                "'TZ_XGYSZ' TEXT," + // 17: tz_xgysz
                "'TZ_DMDDB' TEXT," + // 18: tz_dmddb
                "'TZ_KFXT' TEXT," + // 19: tz_kfxt
                "'TZ_QT' TEXT," + // 20: tz_qt
                "'SHFSZD_SFXY' INTEGER," + // 21: shfszd_sfxy
                "'SHFSZD_SFXYMS' TEXT," + // 22: shfszd_sfxyms
                "'SHFSZD_SFYJ' INTEGER," + // 23: shfszd_sfyj
                "'SHFSZD_SFYJMS' TEXT," + // 24: shfszd_sfyjms
                "'SHFSZD_SFYD' INTEGER," + // 25: shfszd_sfyd
                "'SHFSZD_SFYDMS' TEXT," + // 26: shfszd_sfydms
                "'SHFSZD_YDXM' TEXT," + // 27: shfszd_ydxm
                "'SHFSZD_SYQK' TEXT," + // 28: shfszd_syqk
                "'SHFSZD_XLTZ' TEXT," + // 29: shfszd_xltz
                "'SHFSZD_ZYXW' TEXT," + // 30: shfszd_zyxw
                "'SHFSZD_MQQK' TEXT," + // 31: shfszd_mqqk
                "'SHFSZD_SFFWNR' TEXT," + // 32: shfszd_sffwnr
                "'SHFSZD_SFPG' TEXT," + // 33: shfszd_sfpg
                "'SHFSZD_XCSFRQ' TEXT," + // 34: shfszd_xcsfrq
                "'SHFSZD_SFYSQM' TEXT," + // 35: shfszd_sfysqm
                "'CREATE_TIME' TEXT," + // 36: createTime
                "'UPDATE_TIME' TEXT);"); // 37: updateTime
    }

    /** Drops the underlying database table. */
    public static void dropTable(SQLiteDatabase db, boolean ifExists) {
        String sql = "DROP TABLE " + (ifExists ? "IF EXISTS " : "") + "'FOLLOW_UP_AGED'";
        db.execSQL(sql);
    }

    /** @inheritdoc */
    @Override
    protected void bindValues(SQLiteStatement stmt, FollowUpAged entity) {
        stmt.clearBindings();
        stmt.bindString(1, entity.getFollowUpNo());
        stmt.bindString(2, entity.getIdcard());
 
        String grxx_zrys = entity.getGrxx_zrys();
        if (grxx_zrys != null) {
            stmt.bindString(3, grxx_zrys);
        }
 
        String grxx_sfrq = entity.getGrxx_sfrq();
        if (grxx_sfrq != null) {
            stmt.bindString(4, grxx_sfrq);
        }
 
        String grxx_sfzqjy = entity.getGrxx_sfzqjy();
        if (grxx_sfzqjy != null) {
            stmt.bindString(5, grxx_sfzqjy);
        }
 
        String grxx_sffs = entity.getGrxx_sffs();
        if (grxx_sffs != null) {
            stmt.bindString(6, grxx_sffs);
        }
 
        String grxx_sfxz = entity.getGrxx_sfxz();
        if (grxx_sfxz != null) {
            stmt.bindString(7, grxx_sfxz);
        }
 
        String grxx_xlzt = entity.getGrxx_xlzt();
        if (grxx_xlzt != null) {
            stmt.bindString(8, grxx_xlzt);
        }
 
        String zz = entity.getZz();
        if (zz != null) {
            stmt.bindString(9, zz);
        }
 
        String tz_xy = entity.getTz_xy();
        if (tz_xy != null) {
            stmt.bindString(10, tz_xy);
        }
 
        String tz_xl = entity.getTz_xl();
        if (tz_xl != null) {
            stmt.bindString(11, tz_xl);
        }
 
        String tz_yw = entity.getTz_yw();
        if (tz_yw != null) {
            stmt.bindString(12, tz_yw);
        }
 
        String tz_sg = entity.getTz_sg();
        if (tz_sg != null) {
            stmt.bindString(13, tz_sg);
        }
 
        String tz_tz = entity.getTz_tz();
        if (tz_tz != null) {
            stmt.bindString(14, tz_tz);
        }
 
        String tz_tzzs = entity.getTz_tzzs();
        if (tz_tzzs != null) {
            stmt.bindString(15, tz_tzzs);
        }
 
        String tz_xzdgc = entity.getTz_xzdgc();
        if (tz_xzdgc != null) {
            stmt.bindString(16, tz_xzdgc);
        }
 
        String tz_gmddb = entity.getTz_gmddb();
        if (tz_gmddb != null) {
            stmt.bindString(17, tz_gmddb);
        }
 
        String tz_xgysz = entity.getTz_xgysz();
        if (tz_xgysz != null) {
            stmt.bindString(18, tz_xgysz);
        }
 
        String tz_dmddb = entity.getTz_dmddb();
        if (tz_dmddb != null) {
            stmt.bindString(19, tz_dmddb);
        }
 
        String tz_kfxt = entity.getTz_kfxt();
        if (tz_kfxt != null) {
            stmt.bindString(20, tz_kfxt);
        }
 
        String tz_qt = entity.getTz_qt();
        if (tz_qt != null) {
            stmt.bindString(21, tz_qt);
        }
 
        Boolean shfszd_sfxy = entity.getShfszd_sfxy();
        if (shfszd_sfxy != null) {
            stmt.bindLong(22, shfszd_sfxy ? 1l: 0l);
        }
 
        String shfszd_sfxyms = entity.getShfszd_sfxyms();
        if (shfszd_sfxyms != null) {
            stmt.bindString(23, shfszd_sfxyms);
        }
 
        Boolean shfszd_sfyj = entity.getShfszd_sfyj();
        if (shfszd_sfyj != null) {
            stmt.bindLong(24, shfszd_sfyj ? 1l: 0l);
        }
 
        String shfszd_sfyjms = entity.getShfszd_sfyjms();
        if (shfszd_sfyjms != null) {
            stmt.bindString(25, shfszd_sfyjms);
        }
 
        Boolean shfszd_sfyd = entity.getShfszd_sfyd();
        if (shfszd_sfyd != null) {
            stmt.bindLong(26, shfszd_sfyd ? 1l: 0l);
        }
 
        String shfszd_sfydms = entity.getShfszd_sfydms();
        if (shfszd_sfydms != null) {
            stmt.bindString(27, shfszd_sfydms);
        }
 
        String shfszd_ydxm = entity.getShfszd_ydxm();
        if (shfszd_ydxm != null) {
            stmt.bindString(28, shfszd_ydxm);
        }
 
        String shfszd_syqk = entity.getShfszd_syqk();
        if (shfszd_syqk != null) {
            stmt.bindString(29, shfszd_syqk);
        }
 
        String shfszd_xltz = entity.getShfszd_xltz();
        if (shfszd_xltz != null) {
            stmt.bindString(30, shfszd_xltz);
        }
 
        String shfszd_zyxw = entity.getShfszd_zyxw();
        if (shfszd_zyxw != null) {
            stmt.bindString(31, shfszd_zyxw);
        }
 
        String shfszd_mqqk = entity.getShfszd_mqqk();
        if (shfszd_mqqk != null) {
            stmt.bindString(32, shfszd_mqqk);
        }
 
        String shfszd_sffwnr = entity.getShfszd_sffwnr();
        if (shfszd_sffwnr != null) {
            stmt.bindString(33, shfszd_sffwnr);
        }
 
        String shfszd_sfpg = entity.getShfszd_sfpg();
        if (shfszd_sfpg != null) {
            stmt.bindString(34, shfszd_sfpg);
        }
 
        String shfszd_xcsfrq = entity.getShfszd_xcsfrq();
        if (shfszd_xcsfrq != null) {
            stmt.bindString(35, shfszd_xcsfrq);
        }
 
        String shfszd_sfysqm = entity.getShfszd_sfysqm();
        if (shfszd_sfysqm != null) {
            stmt.bindString(36, shfszd_sfysqm);
        }
 
        String createTime = entity.getCreateTime();
        if (createTime != null) {
            stmt.bindString(37, createTime);
        }
 
        String updateTime = entity.getUpdateTime();
        if (updateTime != null) {
            stmt.bindString(38, updateTime);
        }
    }

    /** @inheritdoc */
    @Override
    public String readKey(Cursor cursor, int offset) {
        return cursor.getString(offset + 0);
    }    

    /** @inheritdoc */
    @Override
    public FollowUpAged readEntity(Cursor cursor, int offset) {
        FollowUpAged entity = new FollowUpAged( //
            cursor.getString(offset + 0), // followUpNo
            cursor.getString(offset + 1), // idcard
            cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2), // grxx_zrys
            cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3), // grxx_sfrq
            cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4), // grxx_sfzqjy
            cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5), // grxx_sffs
            cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6), // grxx_sfxz
            cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7), // grxx_xlzt
            cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8), // zz
            cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9), // tz_xy
            cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10), // tz_xl
            cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11), // tz_yw
            cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12), // tz_sg
            cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13), // tz_tz
            cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14), // tz_tzzs
            cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15), // tz_xzdgc
            cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16), // tz_gmddb
            cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17), // tz_xgysz
            cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18), // tz_dmddb
            cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19), // tz_kfxt
            cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20), // tz_qt
            cursor.isNull(offset + 21) ? null : cursor.getShort(offset + 21) != 0, // shfszd_sfxy
            cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22), // shfszd_sfxyms
            cursor.isNull(offset + 23) ? null : cursor.getShort(offset + 23) != 0, // shfszd_sfyj
            cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24), // shfszd_sfyjms
            cursor.isNull(offset + 25) ? null : cursor.getShort(offset + 25) != 0, // shfszd_sfyd
            cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26), // shfszd_sfydms
            cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27), // shfszd_ydxm
            cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28), // shfszd_syqk
            cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29), // shfszd_xltz
            cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30), // shfszd_zyxw
            cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31), // shfszd_mqqk
            cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32), // shfszd_sffwnr
            cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33), // shfszd_sfpg
            cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34), // shfszd_xcsfrq
            cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35), // shfszd_sfysqm
            cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36), // createTime
            cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37) // updateTime
        );
        return entity;
    }
     
    /** @inheritdoc */
    @Override
    public void readEntity(Cursor cursor, FollowUpAged entity, int offset) {
        entity.setFollowUpNo(cursor.getString(offset + 0));
        entity.setIdcard(cursor.getString(offset + 1));
        entity.setGrxx_zrys(cursor.isNull(offset + 2) ? null : cursor.getString(offset + 2));
        entity.setGrxx_sfrq(cursor.isNull(offset + 3) ? null : cursor.getString(offset + 3));
        entity.setGrxx_sfzqjy(cursor.isNull(offset + 4) ? null : cursor.getString(offset + 4));
        entity.setGrxx_sffs(cursor.isNull(offset + 5) ? null : cursor.getString(offset + 5));
        entity.setGrxx_sfxz(cursor.isNull(offset + 6) ? null : cursor.getString(offset + 6));
        entity.setGrxx_xlzt(cursor.isNull(offset + 7) ? null : cursor.getString(offset + 7));
        entity.setZz(cursor.isNull(offset + 8) ? null : cursor.getString(offset + 8));
        entity.setTz_xy(cursor.isNull(offset + 9) ? null : cursor.getString(offset + 9));
        entity.setTz_xl(cursor.isNull(offset + 10) ? null : cursor.getString(offset + 10));
        entity.setTz_yw(cursor.isNull(offset + 11) ? null : cursor.getString(offset + 11));
        entity.setTz_sg(cursor.isNull(offset + 12) ? null : cursor.getString(offset + 12));
        entity.setTz_tz(cursor.isNull(offset + 13) ? null : cursor.getString(offset + 13));
        entity.setTz_tzzs(cursor.isNull(offset + 14) ? null : cursor.getString(offset + 14));
        entity.setTz_xzdgc(cursor.isNull(offset + 15) ? null : cursor.getString(offset + 15));
        entity.setTz_gmddb(cursor.isNull(offset + 16) ? null : cursor.getString(offset + 16));
        entity.setTz_xgysz(cursor.isNull(offset + 17) ? null : cursor.getString(offset + 17));
        entity.setTz_dmddb(cursor.isNull(offset + 18) ? null : cursor.getString(offset + 18));
        entity.setTz_kfxt(cursor.isNull(offset + 19) ? null : cursor.getString(offset + 19));
        entity.setTz_qt(cursor.isNull(offset + 20) ? null : cursor.getString(offset + 20));
        entity.setShfszd_sfxy(cursor.isNull(offset + 21) ? null : cursor.getShort(offset + 21) != 0);
        entity.setShfszd_sfxyms(cursor.isNull(offset + 22) ? null : cursor.getString(offset + 22));
        entity.setShfszd_sfyj(cursor.isNull(offset + 23) ? null : cursor.getShort(offset + 23) != 0);
        entity.setShfszd_sfyjms(cursor.isNull(offset + 24) ? null : cursor.getString(offset + 24));
        entity.setShfszd_sfyd(cursor.isNull(offset + 25) ? null : cursor.getShort(offset + 25) != 0);
        entity.setShfszd_sfydms(cursor.isNull(offset + 26) ? null : cursor.getString(offset + 26));
        entity.setShfszd_ydxm(cursor.isNull(offset + 27) ? null : cursor.getString(offset + 27));
        entity.setShfszd_syqk(cursor.isNull(offset + 28) ? null : cursor.getString(offset + 28));
        entity.setShfszd_xltz(cursor.isNull(offset + 29) ? null : cursor.getString(offset + 29));
        entity.setShfszd_zyxw(cursor.isNull(offset + 30) ? null : cursor.getString(offset + 30));
        entity.setShfszd_mqqk(cursor.isNull(offset + 31) ? null : cursor.getString(offset + 31));
        entity.setShfszd_sffwnr(cursor.isNull(offset + 32) ? null : cursor.getString(offset + 32));
        entity.setShfszd_sfpg(cursor.isNull(offset + 33) ? null : cursor.getString(offset + 33));
        entity.setShfszd_xcsfrq(cursor.isNull(offset + 34) ? null : cursor.getString(offset + 34));
        entity.setShfszd_sfysqm(cursor.isNull(offset + 35) ? null : cursor.getString(offset + 35));
        entity.setCreateTime(cursor.isNull(offset + 36) ? null : cursor.getString(offset + 36));
        entity.setUpdateTime(cursor.isNull(offset + 37) ? null : cursor.getString(offset + 37));
     }
    
    /** @inheritdoc */
    @Override
    protected String updateKeyAfterInsert(FollowUpAged entity, long rowId) {
        return entity.getFollowUpNo();
    }
    
    /** @inheritdoc */
    @Override
    public String getKey(FollowUpAged entity) {
        if(entity != null) {
            return entity.getFollowUpNo();
        } else {
            return null;
        }
    }

    /** @inheritdoc */
    @Override    
    protected boolean isEntityUpdateable() {
        return true;
    }
    
}
